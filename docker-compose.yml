services:
  prover-backend:
    build:
      context: .
      target: prover-backend
    image: prover-backend
    env_file:
     - .env_prover
    volumes:
      - type: bind
        source: .
        target: /bitvmx-backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8081:80"
    networks:
      - bitvmx-net

  verifier-backend:
    build:
      context: .
      target: verifier-backend
    image: verifier-backend
    env_file:
     - .env_verifier
    volumes:
      - type: bind
        source: .
        target: /bitvmx-backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:80"
    networks:
      - bitvmx-net

  bitcoin-regtest-node:
    image: kylemanna/bitcoind
    container_name: bitvmx-bitcoin-regtest
    ports:
      - "8443:8443"
    networks:
      - bitvmx-net
    volumes:
      - ./regtestbitcoin.conf:/bitcoin/.bitcoin/bitcoin.conf
      - bitcoin-regtest-data:/bitcoin/.bitcoin
    command: bitcoind -conf=/bitcoin/.bitcoin/bitcoin.conf -datadir=/bitcoin/.bitcoin

  format:
    build:
      context: .
      target: bitvmx-base
    image: bitvmx-base
    volumes:
      - type: bind
        source: .
        target: /bitvmx-backend
    entrypoint: sh -c "black --config .black . && ruff check --fix"

  flake8:
    image: bitvmx-base
    volumes:
      - type: bind
        source: ./
        target: /bitvmx-backend
        read_only: true
    entrypoint: flake8

  black:
    image: bitvmx-base
    volumes:
      - type: bind
        source: ./
        target: /bitvmx-backend
        read_only: true
    entrypoint: black --config .black --check --diff .

networks:
  bitvmx-net:

volumes:
  bitcoin-regtest-data: